{"version":3,"file":"index.js","sources":["../../src/component/button/index.vue?vue&type=script&setup=true&lang.ts","../../utils/withInstall.ts","../../src/component/button/index.ts","../../src/component/test/test.vue?vue&type=script&setup=true&lang.ts","../../src/component/test/index.ts","../../src/export/component.ts","../../index.ts"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { ref } from 'vue'\n\n\n\nimport { defineComponent as __MACROS_defineComponent } from \"vue\";\nconst __default__ = __MACROS_defineComponent({\n  name: 'YxButton'\n});\n\nexport default /*#__PURE__*/_defineComponent({\n  ...__default__,\n  setup(__props) {\n\nconsole.log('我是按钮组件')\nconst text = ref('我是按钮组件')\nconsole.log(import.meta.env, '环境变量')\n\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_el_button = _resolveComponent(\"el-button\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(_ctx.$options.name)\n  }, [\n    _createVNode(_component_el_button, null, {\n      default: _withCtx(() => [\n        _createTextVNode(_toDisplayString(text.value), 1)\n      ]),\n      _: 1\n    })\n  ], 2))\n}\n}\n\n})","import type { App, Plugin } from 'vue'\ntype SFCWithInstall<T> = T&Plugin\nconst withInstall = <T>(comp:T) => {\n  (comp as SFCWithInstall<T>).install = (app:App) => {\n    // 注册组件\n    app.component((comp as any).name, comp as any)\n  }\n  return comp as SFCWithInstall<T>\n}\n\nexport default withInstall\n","import button from './index.vue'\nimport withInstall from '../../../utils/withInstall'\nexport const Button = withInstall(button)\nexport default Button\n","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { ref } from 'vue'\n\n\nimport { defineComponent as __MACROS_defineComponent } from \"vue\";\nconst __default__ = __MACROS_defineComponent({\n  name: 'YxTest'\n});\n\nexport default /*#__PURE__*/_defineComponent({\n  ...__default__,\n  setup(__props) {\n\nconsole.log('按需测试')\nconst text = ref('按需测试')\n\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_el_button = _resolveComponent(\"el-button\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(_ctx.$options.name)\n  }, [\n    _createVNode(_component_el_button, null, {\n      default: _withCtx(() => [\n        _createTextVNode(_toDisplayString(text.value), 1)\n      ]),\n      _: 1\n    })\n  ], 2))\n}\n}\n\n})","import test from './test.vue'\nimport withInstall from '../../../utils/withInstall'\nexport const Test = withInstall(test)\nexport default Test\n","import type { App, Plugin } from 'vue'\nconst modules = import.meta.glob(['../component/**/*.ts', '!../component/index.ts'], { eager: true })\nconst components = [] as Plugin[]\nfor (const i in modules) {\n  const item: any = modules[i]\n  components.push(item.default)\n}\nconst INSTALLED_KEY = Symbol('INSTALLED_KEY')\nexport const install = (app: App | any) => {\n  if (app[INSTALLED_KEY]) return\n  app[INSTALLED_KEY] = true\n  components.forEach(comp => app.use(comp))\n}\n","/** defaults  umd */\nimport { install as installs } from './src/export/component'\nexport const install = installs\nexport default install\n\n/** esm */\n// 有导出所有类型\nexport * from './src/component/index'\n"],"names":["__default__","__MACROS_defineComponent","_sfc_main$1","_defineComponent","__props","text","ref","_ctx","_cache","_component_el_button","_resolveComponent","_openBlock","_createElementBlock","_normalizeClass","_createVNode","_withCtx","_createTextVNode","_toDisplayString","withInstall$1","comp","app","Button","withInstall","button","_sfc_main","Test","modules","__vite_glob_0_0","components","i","item","INSTALLED_KEY","install"],"mappings":"2CAQA,MAAMA,EAAcC,EAAAA,gBAAyB,CAC3C,KAAM,UACR,CAAC,EAE2BC,EAAiBC,kBAAA,CAC3C,GAAGH,EACH,MAAMI,EAAS,CAGX,MAAAC,EAAOC,MAAI,QAAQ,EAIlB,MAAA,CAACC,EAAUC,IAAgB,CAC1B,MAAAC,EAAuBC,mBAAkB,WAAW,EAElD,OAAAC,EAAA,UAAA,EAAcC,EAAA,mBAAoB,MAAO,CAC/C,MAAOC,EAAA,eAAgBN,EAAK,SAAS,IAAI,CAAA,EACxC,CACDO,EAAA,YAAaL,EAAsB,KAAM,CACvC,QAASM,UAAS,IAAM,CACtBC,EAAAA,gBAAiBC,EAAAA,gBAAiBZ,EAAK,KAAK,EAAG,CAAC,CAAA,CACjD,EACD,EAAG,CAAA,CACJ,GACA,CAAC,CAAA,CAEN,CAEA,CAAC,wLC3BDa,EARwBC,IACrBA,EAA2B,QAAWC,GAAY,CAE7CA,EAAA,UAAWD,EAAa,KAAMA,CAAW,CAAA,EAExCA,GCLIE,EAASC,EAAYC,CAAM,kHCKlCvB,EAAcC,EAAAA,gBAAyB,CAC3C,KAAM,QACR,CAAC,EAE2BuB,EAAiBrB,kBAAA,CAC3C,GAAGH,EACH,MAAMI,EAAS,CAGX,MAAAC,EAAOC,MAAI,MAAM,EAGhB,MAAA,CAACC,EAAUC,IAAgB,CAC1B,MAAAC,EAAuBC,mBAAkB,WAAW,EAElD,OAAAC,EAAA,UAAA,EAAcC,EAAA,mBAAoB,MAAO,CAC/C,MAAOC,EAAA,eAAgBN,EAAK,SAAS,IAAI,CAAA,EACxC,CACDO,EAAA,YAAaL,EAAsB,KAAM,CACvC,QAASM,UAAS,IAAM,CACtBC,EAAAA,gBAAiBC,EAAAA,gBAAiBZ,EAAK,KAAK,EAAG,CAAC,CAAA,CACjD,EACD,EAAG,CAAA,CACJ,GACA,CAAC,CAAA,CAEN,CAEA,CAAC,ECjCYoB,EAAOH,6GAAgB,ECDgEI,EAAA,OAAA,OAAA,CAAA,+BAAAC,EAAA,wIAAA,CAAA,EAC9FC,EAAa,CAAA,EACnB,UAAWC,KAAKH,EAAS,CACjB,MAAAI,EAAYJ,EAAQG,CAAC,EAChBD,EAAA,KAAKE,EAAK,OAAO,CAC9B,CACA,MAAMC,EAAgB,OAAO,eAAe,ECL/BC,EDMWZ,GAAmB,CACrCA,EAAIW,CAAa,IACrBX,EAAIW,CAAa,EAAI,GACrBH,EAAW,QAAQT,GAAQC,EAAI,IAAID,CAAI,CAAC,EAC1C"}